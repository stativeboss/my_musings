{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My blog","text":"<p>I created this blog to share my thoughts, learnings, and experiences with you.</p>"},{"location":"#what-do-you-want-to-explore-today","title":"What do you want to explore today?","text":"<p>Here are the topics I plan to write about:</p> <ul> <li> <p>Chess</p> <p>I love chess and play it often. You can find my chess.com page here. Before starting this blog, I never got to study chess formally. Now I plan to spend some time studying chess and documenting my learnings. I felt it'd be great if I could document my learnings in a blog, and that's why this vertical.</p> </li> <li> <p>Verification</p> <p>As a front-end Design Verification engineer, verification is what I do daily. The field is vast, with numerous protocols, methodologies, and perspectives (VIP, SoC, IP, etc.), offering endless opportunities for growth. I recall learning about FIFO corner cases a few years ago, but now I struggle to remember the details. If I had my notes handy, I could refresh my memory quickly. So, I thought why not digitize and blog all that I learn?</p> </li> <li> <p>Philosophy</p> <p>I enjoy exploring ancient schools of thought like Dvaita, Advaita (which resonates with me most), and Visistadvaita. Occasionally, I also read articles and books about life in general. I'll be documenting these reflections under a section called Vichaara Saagaram. \"Vichaaram\" means contemplation or inquiry, and \"Saagaram\" means ocean. Together, Vichaara Saagaram represents an ocean of contemplation.</p> </li> </ul> <p>I hope you find this blog interesting and informative. Cheers!</p> <p>Side Note: If you're curious about the picture I used on this page, it's a caveman sharing his learnings with us, using a stone as his \"blog.\"</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/posts/hello-world/","title":"Hello world!","text":"<p>Most popular phrase used when trying out new stuff :P</p>"},{"location":"blog/posts/chess_chronicles/chess_index/","title":"\u201cAt the end of the game, the king and the pawn go back in the same box\u201d","text":"<ul> <li>My Games</li> <li>Pro Games Study</li> <li>Openings Repertoires</li> <li>Middle Game Strategies</li> <li>Endgame Techniques</li> <li>Tactics and Motifs</li> </ul> <p>Side Note: If you're curious about the picture I used on this page, it's an enlightened pawn that puzzles a horse.</p>"},{"location":"blog/posts/chess_chronicles/end_game_study/endgame_index/","title":"Standard Combinations","text":""},{"location":"blog/posts/chess_chronicles/middle_game_strats/midgame_index/","title":"Beginner's Guide to Imbalances","text":""},{"location":"blog/posts/chess_chronicles/my_games/my-first-chess-game-doc/","title":"My first chess game doc","text":""},{"location":"blog/posts/chess_chronicles/my_games/my-first-chess-game-doc/#my-first-game-analysis","title":"My First Game Analysis","text":"<p>Here's the PGN of a game I played recently:</p> <p></p> <p>The above image is created using gfychess.com</p> <p>It doesn't have notations. There is another option to consider https://www.apronus.com/chess/pgnviewer/</p> <p>This provides lot of options:</p> <ul> <li>Control the speed of moves</li> <li>Size of gif</li> <li>Shows notations</li> </ul>"},{"location":"blog/posts/chess_chronicles/my_games/mygames_index/","title":"The Blunder King","text":"<ul> <li>My first Game</li> </ul>"},{"location":"blog/posts/chess_chronicles/openings/openings_index/","title":"Choosing My Repertoire","text":""},{"location":"blog/posts/chess_chronicles/openings/openings_index/#white","title":"White","text":"<ul> <li>King's Gambit</li> <li>Italian Game</li> <li>Scotch Game</li> <li>Vienna Game</li> </ul>"},{"location":"blog/posts/chess_chronicles/openings/openings_index/#black","title":"Black","text":"<ul> <li>Sicilian Defense</li> <li>Modern Defense</li> <li>King's Indian Defense</li> </ul>"},{"location":"blog/posts/chess_chronicles/openings/Black/kings_indian/","title":"King's Indian Defense","text":""},{"location":"blog/posts/chess_chronicles/openings/Black/modern/","title":"Modern Defense","text":""},{"location":"blog/posts/chess_chronicles/openings/Black/sicilian/","title":"Sicilian Defense","text":""},{"location":"blog/posts/chess_chronicles/openings/Black/sicilian/#najdorf","title":"Najdorf","text":""},{"location":"blog/posts/chess_chronicles/openings/Black/sicilian/#accelerated-dragon","title":"Accelerated Dragon","text":""},{"location":"blog/posts/chess_chronicles/openings/White/italian/","title":"Italian Game","text":""},{"location":"blog/posts/chess_chronicles/openings/White/kings_gambit/","title":"King's Gambit","text":""},{"location":"blog/posts/chess_chronicles/openings/White/scotch/","title":"Scotch Game","text":""},{"location":"blog/posts/chess_chronicles/openings/White/vienna/","title":"Vienna Game","text":""},{"location":"blog/posts/chess_chronicles/pro_games/progames_index/","title":"My style","text":""},{"location":"blog/posts/chess_chronicles/tactics_and_motifs/tactics_index/","title":"Basic Tactics","text":""},{"location":"blog/posts/verification_files/verification_index/","title":"\"The trust of the innocent is the liar's most useful tool.\"","text":"<ul> <li>UART</li> </ul>"},{"location":"blog/posts/verification_files/UART/uart_baud/","title":"Baud Generator Design","text":""},{"location":"blog/posts/verification_files/UART/uart_index/","title":"Readme","text":"<p>This is my notes of a UART course.</p> <ul> <li>UART: Universal Aysnchronous Receiver/Transmitter is a communication protocol that facilitates serial communication.</li> <li>The word Aysnchronous refers to the fact that the transmitting end and the receiving end don't share a common clock. The clock needs to be recoverd from the data itself. This mechanism is called Clock Domain Recovery (CDR).</li> <li>Basic Flow:</li> <li>On the tx side:<ul> <li>Data is serialized.</li> <li>Framing is done: Data bits are padded with start and stop bits. There might be optional parity bit too.</li> <li>Framed packet is sent over Tx line.</li> </ul> </li> <li>On the rx side:<ul> <li>The receiver deserializes data from Rx line and unframes the packet to retreive original data bytes.</li> </ul> </li> </ul>"},{"location":"blog/posts/verification_files/UART/uart_spec/","title":"Specification","text":""},{"location":"blog/posts/verification_files/UART/uart_spec/#features","title":"Features","text":""},{"location":"blog/posts/verification_files/UART/uart_spec/#communication","title":"Communication","text":"<ul> <li>Asynchronous Serial Communication with standard bauf rates for Tx and Rx.</li> </ul>"},{"location":"blog/posts/verification_files/UART/uart_spec/#data-format","title":"Data Format","text":"<ul> <li>Configurable DW lengths from 5 through 8.</li> <li>Parity bits.</li> <li>Start/Stop bits.</li> </ul>"},{"location":"blog/posts/verification_files/UART/uart_spec/#buffers","title":"Buffers","text":"<ul> <li>16-byte FIFO buffers for Tx and Rx.</li> </ul>"},{"location":"blog/posts/verification_files/UART/uart_spec/#interface","title":"Interface","text":"<ul> <li>AXI-Lite compatible</li> </ul>"},{"location":"blog/posts/verification_files/UART/uart_spec/#block-diagram","title":"Block Diagram","text":""},{"location":"blog/posts/verification_files/UART/uart_spec/#register-map","title":"Register Map","text":"<p>Each reg is a 32-bit and the base address is 32'b0.</p> Register Offset Description RxD_TxD 00 Rx and Tx Data reg LCR 0c Line Control reg LSR 14 Line Status reg DIV 18 Baud Rate Divider"},{"location":"blog/posts/verification_files/UART/uart_spec/#rxd_txd","title":"RxD_TxD","text":"Bit Attribute Description DATA[7:0] RW Write to push value to Tx FIFO/Read to get data from Rx FIFO 31:8 RO Reserved"},{"location":"blog/posts/verification_files/UART/uart_spec/#lcr","title":"LCR","text":"Bit Attribute Description CHAR[1:0] RW Number of bits per character. Loads 0x3 upon reset. STOP_BITS[2] RW Tells whether stop bit is transmitted. 0 indicates absence of stop bit. PARITY_EN[3] RW Parity Enable PARITY_SEL[4] RW Parity Select. 0 indicates odd parity while 1 indicates even parity 31:5 RO Reserved"},{"location":"blog/posts/verification_files/UART/uart_spec/#lsr","title":"LSR","text":"Bit Attribute Description DR[0] RO Data Ready OVRN_ERR[1] RO Overrun Error PRT_ERR[2] RO Parity Error FRM_ERR[3] RO Framing Error BRK_INT[4] RO Break Interrupt TX_HLD_EMPT[5] RO Tx Holding reg empty TX_EMPT[6] RO Tx Empty FIFO_ERR[7] RO FIFIO Error 31:8 RO Reserved"},{"location":"blog/posts/verification_files/UART/uart_spec/#div","title":"DIV","text":"<p>This is a 16-bit counter that divides down the AXI clock to a freq which is 16x the serial data rate.</p> Bit Attribute Description DIV[15:0] RO Baud Rate Divider 31:16 RO Reserved"},{"location":"blog/posts/verification_files/UART/uart_spec/#packet-detection","title":"Packet Detection","text":"<ul> <li>The packet detection starts by detecting transition from 1 to 0.</li> <li>The incoming data is sampled at the bit-pulse centre for the next 9 clocks.</li> <li>The 9th clock is to sample the optional Parity bit.</li> <li>The packet detection ends by sampling the Stop bit (logic 1).</li> </ul>"},{"location":"blog/posts/vichaara_saagaram/philosophy_index/","title":"A Philosophical Quest","text":""},{"location":"blog/posts/vichaara_saagaram/philosophy_index/#lead-me-from-the-unreal-to-the-real-from-darkness-to-light-from-death-to-immortality","title":"\"Lead me from the unreal to the real, from darkness to light, from death to immortality\"","text":"<p>Side Note: </p> <p>The quote on this page is from B\u1e5bhad\u0101ra\u1e47yaka Upani\u1e63ad.</p> <p>\u0905\u0938\u0924\u094b \u092e\u093e \u0938\u0926\u094d\u0917\u092e\u092f \u0964 \u0924\u092e\u0938\u094b \u092e\u093e \u091c\u094d\u092f\u094b\u0924\u093f\u0930\u094d\u0917\u092e\u092f \u0964 \u092e\u0943\u0924\u094d\u092f\u094b\u0930\u094d\u092e\u093e\u093d\u092e\u0943\u0924\u0902 \u0917\u092e\u092f \u0965</p>"},{"location":"tags/","title":"Placeholder for tags","text":""}]}